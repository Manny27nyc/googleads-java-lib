# Copyright 2011, Google Inc. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The Google Ads API Java Client Library uses the slf4j logging facade, allowing
# you to plug in a logging framework of your choice. This configuration file
# sets up the logging infrastructure using log4j. If you wish to take advantage
# of this file and use log4j as your framework, you must include both the log4j
# artifact and the artifact to bridge slf4j with log4j. Please see
# http://www.slf4j.org for more information about slf4j.
#
# See the Google Ads API Java Client Library Logging page for more details:
# https://github.com/googleads/googleads-java-lib/wiki/Logging
#
# This configuration simply logs messages to stderr. For more advanced
# options including logging to files, see the log4j.tofiles.properties
# file in this directory.
dest=err
status=error
name=PropertiesConfig

# Creates a Console appender named 'CONSOLE'.
appender.console.type=Console
# Configures the console logger to write to stderr since examples write
# important messages to stdout.
appender.console.target=SYSTEM_ERR
appender.console.name=CONSOLE
appender.console.layout.type=PatternLayout
appender.console.layout.pattern=[%d{DATE}-%c{1}:%p:%t] %m%n

# Configures the logging levels for the library's loggers.
logger.requestInfoLogger.name=com.google.api.ads.admanager.lib.client.AdManagerServiceClient.requestInfoLogger
logger.requestInfoLogger.level=info
logger.soapXmlLogger.name=com.google.api.ads.admanager.lib.client.AdManagerServiceClient.soapXmlLogger
logger.soapXmlLogger.level=info

# Sets the appender for the root logger to the CONSOLE appender. Other
# loggers will inherit this setting.
rootLogger.appenderRef.console.ref=CONSOLE

